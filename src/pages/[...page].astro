---
import { getCollection, getEntry } from 'astro:content'
import deepmerge from 'deepmerge'
import { mapKeys } from 'radash'
import PageLayout from '../layouts/PageLayout.astro'

export async function getStaticPaths() {
  const pages = await getCollection('pages')
  return pages.map((page) => ({
    params: {
      page: page.slug === 'index' ? undefined : page.slug,
    },
    props: page,
  }))
}

const { data, ...rest } = Astro.props
const settings = await getEntry('settings', 'base')

const packageLayouts = import.meta.glob('../layouts/**/*.astro')
const userLayouts = import.meta.glob('/src/layouts/**/*.astro')

const mapBlockKeys = (blocks: any) =>
  mapKeys(blocks, (key: any) => key.split('/').pop().split('.').shift())

const components = {
  ...mapBlockKeys(packageLayouts),
  ...mapBlockKeys(userLayouts),
}

const found = components[data.layout as any] as any
const functioncomp = found && (await found())
const Layout = functioncomp?.default ?? PageLayout
---

<Layout
  class:list={'page'}
  data={deepmerge(settings.data ?? {}, data ?? {})}
  {...rest}
/>
