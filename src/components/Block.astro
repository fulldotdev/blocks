---
import { getEntries, getEntry } from 'astro:content'
import { mapKeys } from 'radash'

interface Props {
  _bookshop_name?: string
  [key: string | number | symbol]: any
}

let { _bookshop_name, product, ...rest } = Astro.props

const packageBlocks = import.meta.glob('../blocks/**/*.astro')
const userBlocks = import.meta.glob('/src/blocks/**/*.astro')

const mapBlockKeys = (blocks: any) =>
  mapKeys(blocks, (key: any) => key.split('/').pop().split('.').shift())

const components = {
  ...mapBlockKeys(packageBlocks),
  ...mapBlockKeys(userBlocks),
}

const found = components[_bookshop_name as any] as any
const functioncomp = await found()
const Component = functioncomp.default

const productData = product && (await getEntry(product))?.data

rest.pages = rest.pages && (await getEntries(rest.pages))
rest.posts = rest.posts && (await getEntries(rest.posts))
rest.products = rest.products && (await getEntries(rest.products))
rest.categories = rest.categories && (await getEntries(rest.categories))
rest.reviews = rest.reviews && (await getEntries(rest.reviews))
---

{
  Component && (
    <Component
      {...productData}
      {...rest}
    />
  )
}
