---
import { getEntries, getEntry } from 'astro:content'
import { mapKeys } from 'radash'

interface Props {
  _bookshop_name?: string
  [key: string | number | symbol]: any
}

let { _bookshop_name, product, block, ...rest } = Astro.props

const packageBlocks = import.meta.glob('../blocks/**/*.astro')
const userBlocks = import.meta.glob('/src/blocks/**/*.astro')

const mapBlockKeys = (blocks: any) =>
  mapKeys(blocks, (key: any) => key.split('/').pop().split('.').shift())

const components = {
  ...mapBlockKeys(packageBlocks),
  ...mapBlockKeys(userBlocks),
}

const found = components[_bookshop_name as any] as any
const functioncomp = found && (await found())
const Component = functioncomp?.default

const productData = product && (await getEntry(product))?.data
const blockData = block && (await getEntry(block))?.data

let data = {
  ...productData,
  ...blockData,
  ...rest,
}

data.records = data.records
  ? (await getEntries(data.records)).map((entry: any) => entry?.data)
  : data.records
data.pages = data.pages
  ? (await getEntries(data.pages)).map((entry: any) => ({
      href: `/${entry.slug}/`,
      ...entry?.data,
    }))
  : undefined
data.posts = data.posts && (await getEntries(data.posts))
data.products = data.products && (await getEntries(data.products))
data.categories = data.categories && (await getEntries(data.categories))
data.reviews = data.reviews && (await getEntries(data.reviews))
---

{Component && <Component {...data} />}
